{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affairs.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message","src","avatar","alt","corner","content","message_name","name","message_text","message_time","time","messageData","HW1","Affair","tasks","affair","onClick","deleteAffairCallback","_id","buttonDelete","Affairs","mappedAffairs","data","map","a","setFilter","all","high","middle","low","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.7b56d008.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1sOL0\",\"avatar\":\"Message_avatar__1arun\",\"content\":\"Message_content__2_kOF\",\"corner\":\"Message_corner__6ZHWg\",\"message_name\":\"Message_message_name__2DjE3\",\"message_text\":\"Message_message_text__3_oI4\",\"message_time\":\"Message_message_time__WteIh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__2LeYq\",\"buttonDelete\":\"Affairs_buttonDelete__3biga\",\"all\":\"Affairs_all__KTAlc\",\"high\":\"Affairs_high__1VFxZ\",\"middle\":\"Affairs_middle__3hl_-\",\"low\":\"Affairs_low__1MjJB\",\"tasks\":\"Affairs_tasks__2AOSr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__14c_9\"};","import React from 'react'\nimport s from './Message.module.css'\n\ntype MessagePropsType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: MessagePropsType) {\n    return (\n        <div className={s.message}>\n            <img src={props.avatar} alt={'avatar'} className={s.avatar}/>\n            <div className={s.corner}/>\n            <div className={s.content}>\n                <div className={s.message_name}><span>{props.name}</span></div>\n                <div className={s.message_text}>{props.message}</div>\n                <div className={s.message_time}><span>{props.time}</span></div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\nimport \"./Message.module.css\"\n\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Artem',\n    message: 'npm start нажимал?',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport s from './Affairs.module.css'\nimport {AffairType} from \"./HW2\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType// need to fix any\n    deleteAffairCallback: (id: number) => void// need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}// need to fix\n\n    return (\n        <div className={s.tasks}>\n            <div>{props.affair.name}</div>\n            <button onClick={deleteCallback} className={s.buttonDelete}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React, {Dispatch, SetStateAction} from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport s from './Affairs.module.css'\n\ntype AffairsPropsType = { // need to fix any\n    data: AffairType[]\n    setFilter: any\n    deleteAffairCallback: (id: number) => void\n\n\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: any) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => props.setFilter(\"all\") // need to fix\n    const setHigh = () => props.setFilter(\"high\")\n    const setMiddle = () => props.setFilter(\"middle\")\n    const setLow = () => props.setFilter(\"low\")\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll} className={s.all}>All</button>\n            <button onClick={setHigh} className={s.high}>High</button>\n            <button onClick={setMiddle} className={s.middle}>Middle</button>\n            <button onClick={setLow} className={s.low}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle'// need to fix any\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n} // need to fix any\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: AffairType[] = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => { // need to fix any\n    if (filter === 'all') return affairs\n    else return  affairs.filter(a => a.priority === filter)\n}\n\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => { // need to fix any\n    return affairs.filter(a => a._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            {/*<HW5/>*/}\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}